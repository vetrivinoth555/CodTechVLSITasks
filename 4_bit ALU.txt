module ALU (
    input [3:0] A,           // 4-bit input A
    input [3:0] B,           // 4-bit input B
    input [2:0] ALU_Sel,     // ALU control select signal (3-bits for 8 operations)
    output reg [3:0] Result, // 4-bit result
    output reg Zero          // Zero flag (high if result is 0)
);
    // ALU Operation
    always @ (A, B, ALU_Sel) begin
        case(ALU_Sel)
            3'b000: Result = A + B;           // Addition
            3'b001: Result = A - B;           // Subtraction
            3'b010: Result = A & B;           // AND
            3'b011: Result = A | B;           // OR
            3'b100: Result = ~A;              // NOT (negation of A)
            default: Result = 4'b0000;        // Default case (optional)
        endcase
        
        // Zero flag logic (set to 1 if result is zero)
        Zero = (Result == 4'b0000) ? 1'b1 : 1'b0;
    end
endmodule
